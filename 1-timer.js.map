{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["\nimport flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst startButton = document.querySelector('button[data-start]');\nconst dateTimePicker = document.querySelector('#datetime-picker');\nconst daysSpan = document.querySelector('[data-days]');\nconst hoursSpan = document.querySelector('[data-hours]');\nconst minutesSpan = document.querySelector('[data-minutes]');\nconst secondsSpan = document.querySelector('[data-seconds]');\n\nlet countdownInterval = null;\nlet userSelectedDate = null;\n\nstartButton.disabled = true; \n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0];\n    if (userSelectedDate <= new Date()) {\n      iziToast.error({ title: 'Error', message: 'Please choose a date in the future' });\n      startButton.disabled = true;\n    } else {\n      startButton.disabled = false;\n    }\n  },\n};\n\nflatpickr(dateTimePicker, options);\n\nstartButton.addEventListener('click', () => {\n  startButton.disabled = true;\n  dateTimePicker.disabled = true;\n\n  countdownInterval = setInterval(() => {\n    const timeRemaining = userSelectedDate - new Date();\n\n    if (timeRemaining <= 0) {\n      clearInterval(countdownInterval);\n      dateTimePicker.disabled = false;\n      startButton.disabled = true;\n      iziToast.success({ title: 'Complete', message: 'Countdown has ended!' });\n      return;\n    }\n\n    const { days, hours, minutes, seconds } = convertMs(timeRemaining);\n    daysSpan.textContent = days;\n    hoursSpan.textContent = addLeadingZero(hours);\n    minutesSpan.textContent = addLeadingZero(minutes);\n    secondsSpan.textContent = addLeadingZero(seconds);\n  }, 1000);\n});"],"names":["startButton","dateTimePicker","daysSpan","hoursSpan","minutesSpan","secondsSpan","countdownInterval","userSelectedDate","addLeadingZero","value","convertMs","ms","days","hours","minutes","seconds","options","selectedDates","iziToast","flatpickr","timeRemaining"],"mappings":"0IAMA,MAAMA,EAAc,SAAS,cAAc,oBAAoB,EACzDC,EAAiB,SAAS,cAAc,kBAAkB,EAC1DC,EAAW,SAAS,cAAc,aAAa,EAC/CC,EAAY,SAAS,cAAc,cAAc,EACjDC,EAAc,SAAS,cAAc,gBAAgB,EACrDC,EAAc,SAAS,cAAc,gBAAgB,EAE3D,IAAIC,EAAoB,KACpBC,EAAmB,KAEvBP,EAAY,SAAW,GAEvB,SAASQ,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAEA,SAASC,EAAUC,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBV,EAAmBU,EAAc,CAAC,EAC9BV,GAAoB,IAAI,MAC1BW,EAAS,MAAM,CAAE,MAAO,QAAS,QAAS,oCAAoC,CAAE,EAChFlB,EAAY,SAAW,IAEvBA,EAAY,SAAW,EAE1B,CACH,EAEAmB,EAAUlB,EAAgBe,CAAO,EAEjChB,EAAY,iBAAiB,QAAS,IAAM,CAC1CA,EAAY,SAAW,GACvBC,EAAe,SAAW,GAE1BK,EAAoB,YAAY,IAAM,CACpC,MAAMc,EAAgBb,EAAmB,IAAI,KAE7C,GAAIa,GAAiB,EAAG,CACtB,cAAcd,CAAiB,EAC/BL,EAAe,SAAW,GAC1BD,EAAY,SAAW,GACvBkB,EAAS,QAAQ,CAAE,MAAO,WAAY,QAAS,sBAAsB,CAAE,EACvE,MACD,CAED,KAAM,CAAE,KAAAN,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYL,EAAUU,CAAa,EACjElB,EAAS,YAAcU,EACvBT,EAAU,YAAcK,EAAeK,CAAK,EAC5CT,EAAY,YAAcI,EAAeM,CAAO,EAChDT,EAAY,YAAcG,EAAeO,CAAO,CACjD,EAAE,GAAI,CACT,CAAC"}